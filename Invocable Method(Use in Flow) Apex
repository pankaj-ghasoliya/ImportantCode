public class WorkOrderAction {
    
	@InvocableMethod
    public static List<Id> updateServiceProvider(List<Id> ids) {
        String workOrderId;
        If(ids.size() > 0){
            workOrderId = ids[0];
        }
        List<Id> idToReturn = new List<Id>();
        Work_Order__c workOrder = [SELECT Id, 
                                          ServiceProvider__c, Primary_Address__r.City__c,
                                          Primary_Address__r.Zip_Postal_Code__c,
                                          Primary_Address__r.State_Province__c,
                                          Primary_Address__r.Country__c
                                          FROM Work_Order__c 
                                          WHERE Id =: workOrderId];
        System.debug('workOrder >> '+ workOrder);
        
        
        List<Service_Provider__c> serviceProviders = [SELECT Id, 
                                                     City__c, Zip_Code__c, 
                                                     Country_State__c 
                                                     FROM Service_Provider__c 
                                                     WHERE City__c  =: workOrder.Primary_Address__r.City__c OR 
                                                     Zip_Code__c =: workOrder.Primary_Address__r.Zip_Postal_Code__c OR
                                                     Country_State__c =: workOrder.Primary_Address__r.Country__c];
        System.debug('serviceProviders >> '+ serviceProviders);

        for(Service_Provider__c serviceProvider : serviceProviders){
            if(serviceProvider.City__c == workOrder.Primary_Address__r.City__c &&
               serviceProvider.Zip_Code__c == workOrder.Primary_Address__r.Zip_Postal_Code__c &&
               serviceProvider.Country_State__c == workOrder.Primary_Address__r.Country__c){
                   
                   System.debug('Inside if block >>');
                   System.debug('serviceProvider.City__c >> '+ serviceProvider.City__c);
                   System.debug('workOrder.Primary_Address__r.City__c >> '+ workOrder.Primary_Address__r.City__c);
                   System.debug('serviceProvider.Zip_Code__c >> '+ serviceProvider.Zip_Code__c);
                   System.debug('workOrder.Primary_Address__r.Zip_Postal_Code__c >> '+ workOrder.Primary_Address__r.Zip_Postal_Code__c);
                   System.debug('serviceProvider.Country_State__c >> '+ serviceProvider.Country_State__c);
                   System.debug('workOrder.Primary_Address__r.Country__c >> '+ workOrder.Primary_Address__r.Country__c);
                   
                   idToReturn.add(serviceProvider.Id);
               }
        }
		System.debug('idToReturn >> '+ idToReturn);
        return idToReturn;
    }
}
